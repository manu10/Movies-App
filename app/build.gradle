apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-kapt"
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion rootProject.versions.sdk.compile
    buildToolsVersion rootProject.versions.buildTools

    defaultConfig {
        applicationId "com.manugarcia010.moviesapp"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "SERVER_URL", '"https://api.themoviedb.org/3/"'
        buildConfigField "String", "MOVIE_IMG_URL_PREFIX", '"https://image.tmdb.org/t/p/w185"'
        buildConfigField "String", "API_KEY", localProperties['apiKey']
        buildConfigField "String", "DATABASE", '"movies-db"'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    implementation "androidx.core:core-ktx:$versions.androidXCoreKtx"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerview"
    implementation "androidx.cardview:cardview:$versions.cardview"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swiperefreshlayout"

    // Glide to load remote images
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    // LiveData & ViewModel
    implementation "android.arch.lifecycle:extensions:$versions.lifecycleExt"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleViewmodelKtx"

    // Data binding
    kapt "com.android.databinding:compiler:$versions.databindingComp"

    // Nav components
    implementation "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "android.arch.navigation:navigation-ui-ktx:$versions.navigation"

    // Dagger for DI
    implementation "com.google.dagger:dagger:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    //Networking
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.converterMoshi"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3Interceptor"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinxCoroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinxCoroutines"


    // Room persistence lib
    api "androidx.room:room-runtime:$versions.room"
    annotationProcessor "androidx.room:room-compiler:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"
    // Kotlin Extensions and Coroutines support for Room
    api "androidx.room:room-ktx:$versions.room"
    // gson for room converters
    implementation "com.google.code.gson:gson:$versions.gson"

    implementation "androidx.legacy:legacy-support-v4:$versions.supportv4"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$versions.jUnit"
    testImplementation "org.hamcrest:hamcrest-all:$versions.hamcrest"
    testImplementation "androidx.arch.core:core-testing:$versions.archTesting"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.kotlinxCoroutines"
    testImplementation "com.google.truth:truth:$versions.truth"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito"

    androidTestImplementation "androidx.test.ext:junit:$versions.androidXJUnit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espressoCore"

}
